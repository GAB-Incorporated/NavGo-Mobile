on:
  [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm install

      - name: Build app
        id: eas_build
        run: |
          # Start the build
          eas build --platform android --non-interactive --profile createAndroidAPK
          
          # Capture the build list output without JSON parsing for debugging
          BUILD_INFO=$(eas build:list --status completed --platform android --profile createAndroidAPK --limit 1)
          echo "Build info output (debugging): $BUILD_INFO"

          # Attempt to parse the URL only if output seems correct
          APK_URL=$(echo "$BUILD_INFO" | jq -r '.[0].artifacts.buildUrl' 2>/dev/null || echo "Error")

          if [ "$APK_URL" = "Error" ]; then
            echo "Failed to parse URL from JSON output. Please check build logs."
            exit 1
          elif [ -z "$APK_URL" ] || [ "$APK_URL" = "null" ]; then
            echo "No APK URL found in build output. Please check if the build completed successfully."
            exit 1
          else
            echo "APK_URL=${APK_URL}" >> $GITHUB_ENV
          fi

      - name: Download APK
        if: success()
        run: |
          curl -o navGo.apk "$APK_URL"

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: navGo.apk
          path: navGo.apk